{"version":3,"sources":["webpack:///./src/pages/index.tsx"],"names":["pageQuery","IndexPage","data","className","title","fluid","avatar","childImageSharp","href","allMdx","edges","map","node","frontmatter","fields","slug","key","to","date","Date","getFullYear"],"mappings":"kHAAA,uHA4GaA,GA5Gb,UA4GyB,cAmCVC,UArIsC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACnD,yBAAKC,UAAU,2FACb,kBAAC,IAAD,CAAKC,MAAM,SAEX,yBAAKD,UAAU,iCACb,kBAAC,IAAD,CAAKE,MAAOH,EAAKI,OAAOC,gBAAgBF,SAE1C,yBAAKF,UAAU,kBACb,yBAAKA,UAAU,0CACb,wBAAIA,UAAU,iCAAd,aACA,wBAAIA,UAAU,8GACZ,0BAAMA,UAAU,iCAAhB,cAAkE,IADpE,kCAIA,yBAAKA,UAAU,sEACb,uBAAGA,UAAU,QAAb,4OAMA,uBAAGA,UAAU,QACX,0BAAMA,UAAU,wBAAhB,0CAC0C,IACxC,uBAAGK,KAAK,sBAAR,WAHJ,qIASA,wBAAIL,UAAU,6EAAd,cAGA,uBAAGA,UAAU,QAAb,6BAC6B,IAC3B,uBAAGA,UAAU,OAAOK,KAAK,sBAAzB,UAFF,mHAMgD,IAC9C,uBAAGA,KAAK,iDAAR,sBAPF,qGAcA,uBAAGL,UAAU,QAAb,yBACyB,IACvB,uBAAGA,UAAU,OAAOK,KAAK,6BAAzB,kBAEK,IAJP,mMAUA,uBAAGL,UAAU,QAAb,6BAC6B,IAC3B,uBAAGK,KAAK,gCAAgCL,UAAU,QAAlD,qBAFF,mJAUA,wBAAIA,UAAU,6EAAd,WAGA,6BACGD,EAAKO,OAAOC,MAAMC,KAAI,YAAc,IAAXC,EAAW,EAAXA,KAClBR,EAAQQ,EAAKC,YAAYT,OAASQ,EAAKE,OAAOC,KACpD,OACE,yBAAKC,IAAKJ,EAAKE,OAAOC,KAAMZ,UAAU,QACpC,kBAAC,OAAD,CAAMc,GAAE,WAAaL,EAAKE,OAAOC,KAAQZ,UAAU,QAChDC,GAEH,yBAAKD,UAAU,sCACZS,EAAKC,YAAYK,WAO5B,4BAAQf,UAAU,8EAChB,0BAAMA,UAAU,2BAAhB,MACK,IAAIgB,MAAOC,cADhB,eAGA,0BAAMjB,UAAU,sBAAhB","file":"component---src-pages-index-tsx-32081ae6c0cab670bde9.js","sourcesContent":["import { graphql, Link } from 'gatsby'\nimport Img from 'gatsby-image'\nimport React, { FunctionComponent } from 'react'\nimport SEO from '../components/seo'\nimport '../styles/base.css'\n\ntype IndexPageProps = {\n  data: any\n}\n\nconst IndexPage: FunctionComponent<IndexPageProps> = ({ data }) => (\n  <div className=\"flex flex-col lg:flex-row lg:max-w-screen-xl lg:mx-auto items-stretch text-warmGrey-800\">\n    <SEO title=\"Home\" />\n\n    <div className=\"w-auto lg:max-w-4xl lg:flex-1\">\n      <Img fluid={data.avatar.childImageSharp.fluid} />\n    </div>\n    <div className=\"lg:flex-1 px-4\">\n      <div className=\"text-center lg:text-left flex flex-col\">\n        <h1 className=\"order-2 text-4xl pt-3 lg:pt-6\">Hi there.</h1>\n        <h2 className=\"order-1 font-caps text-xs lg:text-base pt-3 lg:pt-64 font-light uppercase text-warmGrey-700 tracking-tight\">\n          <span className=\"font-normal text-warmGrey-900\">Idan Gazit</span>{' '}\n          makes things in San Francisco.\n        </h2>\n        <div className=\"order-3 text-xl pt-3 text-left max-w-lg mx-auto lg:mx-0 font-light\">\n          <p className=\"pb-5\">\n            I make products that delight and inform. I'm a developer, a\n            designer, a datavis junkie, and a typography nerd. I'm particularly\n            interested in data, the tools we use for working with it, and how we\n            use it to tell meaningful stories.\n          </p>\n          <p className=\"pb-3\">\n            <span className=\"bg-warmGrey-200 px-1\">\n              I'm currently a director of research at{' '}\n              <a href=\"https://github.com\">GitHub</a>\n            </span>\n            , in the office of the CTO. I figure out how to improve the lives of\n            developers while trying to avoid buzzwords about innovation.\n          </p>\n\n          <h3 className=\"pt-6 pb-3 uppercase text-sm tracking-widest font-medium text-warmGrey-900\">\n            Previously\n          </h3>\n          <p className=\"pb-3\">\n            As a principal engineer at{' '}\n            <a className=\"link\" href=\"https://heroku.com\">\n              Heroku\n            </a>\n            , I was responsible for developing a unified interface to our data\n            products. Prior to that, I was design lead on{' '}\n            <a href=\"https://devcenter.heroku.com/articles/metrics\">\n              Heroku App Metrics\n            </a>\n            , which visualized app performance and addressed customer complaints\n            about the opacity of Heroku.\n          </p>\n\n          <p className=\"pb-3\">\n            I am an alumnus of the{' '}\n            <a className=\"link\" href=\"https://djangoproject.com\">\n              Django Project\n            </a>{' '}\n            core team, where I was a developer and lead designer for the\n            framework. I delivered the keynote address at Djangocon US 2011, and\n            designed visual identities for various PyCons and DjangoCons.\n          </p>\n\n          <p className=\"pb-3\">\n            I was a founding mentor at{' '}\n            <a href=\"http://www.campustelaviv.com/\" className=\"link\">\n              Google Campus TLV\n            </a>\n            , where I had the opportunity to help hundreds of startups distill\n            their product direction. Google later extended the campus program\n            worldwide.\n          </p>\n\n          <h3 className=\"pt-6 pb-3 uppercase text-sm tracking-widest font-medium text-warmGrey-900\">\n            Writing\n          </h3>\n          <div>\n            {data.allMdx.edges.map(({ node }) => {\n              const title = node.frontmatter.title || node.fields.slug\n              return (\n                <div key={node.fields.slug} className=\"pb-3\">\n                  <Link to={`/writing${node.fields.slug}`} className=\"link\">\n                    {title}\n                  </Link>\n                  <div className=\"italic text-warmGrey-500 text-base\">\n                    {node.frontmatter.date}\n                  </div>\n                </div>\n              )\n            })}\n          </div>\n\n          <footer className=\"py-5 uppercase font-light tracking-widest text-xs text-gray-600 font-caps \">\n            <span className=\"whitespace-no-wrap pr-5\">\n              Â© {new Date().getFullYear()} Idan Gazit\n            </span>\n            <span className=\"whitespace-no-wrap\">All rights reserved</span>\n          </footer>\n        </div>\n      </div>\n    </div>\n  </div>\n)\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    avatar: file(relativePath: { eq: \"idan-sketch.jpg\" }) {\n      childImageSharp {\n        fluid(maxWidth: 800) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    allMdx(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { draft: { ne: true } } }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage\n"],"sourceRoot":""}